{
  "name": "neo4j-children-node-sink",
  "config": {
    "connector.class": "org.neo4j.connectors.kafka.sink.Neo4jConnector",
    "topics": "children",
    "neo4j.uri": "bolt://neo4j:7687",
    "neo4j.authentication.basic.username": "neo4j",
    "neo4j.authentication.basic.password": "dbpassword",
    "neo4j.cypher.topic.children": "MERGE (t:Children {nationalid: event.nationalid,}) ON CREATE SET t += {nationalid: event.nationalid, _id: event._id, name: event.name, surname: event.surname, gender: event.gender, dob: event.dob, family_id: event.family_id, father_nationalid: event.father_nationalid, mother_nationalid: event.mother_nationalid, add_street_1: event.address.street_1, add_street_2: event.address.street_2, add_town: event.address.town, add_county: event.address.county, add_province: event.address.province, add_country: event.address.country, add_postal_code: event.address.postal_code, add_country_code: event.address.country_code, add_parcel_id: event.address.parcel_id, add_neighbourhood: event.address.neighbourhood} ON MATCH SET t += {name: event.name, surname: event.surname, gender: event.gender, dob: event.dob, family_id: event.family_id, father_nationalid: event.father_nationalid, mother_nationalid: event.mother_nationalid, parcel_id: event.address.parcel_id}",
    "neo4j.cypher.topic.children": "MERGE (t:Address {parcel_id: event.address.parcel_id}) ON CREATE SET t += {parcel_id: event.address.parcel_id, street_1: event.address.street_1, street_2: event.address.street_2, town: event.address.town, county: event.address.county, province: event.address.province, country: event.address.country, postal_code: event.address.postal_code, country_code: event.address.country_code, neighbourhood: event.address.neighbourhood} ON MATCH SET t += { street_1: event.address.street_1, street_2: event.address.street_2, town: event.address.town, county: event.address.county, province: event.address.province, country: event.address.country, postal_code: event.address.postal_code, country_code: event.address.country_code, neighbourhood: event.address.neighbourhood}",
    "key.converter": "org.apache.kafka.connect.storage.StringConverter",
    "value.converter": "org.apache.kafka.connect.json.JsonConverter",
    "value.converter.schemas.enable": "false",
    "tasks.max": "2",
    "neo4j.batch.size": "1000",
    "neo4j.batch.timeout.msecs": "5000",
    "neo4j.retry.backoff.msecs": "3000",
    "neo4j.retry.max.attemps": "5"
  }
}


